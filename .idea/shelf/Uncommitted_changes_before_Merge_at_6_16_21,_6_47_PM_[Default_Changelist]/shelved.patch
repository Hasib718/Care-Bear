Index: app/src/main/java/com/hasib/carebear/patient/PatientMapActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hasib.carebear.patient;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.ActionBarDrawerToggle;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\n\nimport android.Manifest;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.IntentSender;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.location.LocationManager;\nimport android.os.Bundle;\nimport android.os.Looper;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.SearchView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.firebase.geofire.GeoFire;\nimport com.firebase.geofire.GeoLocation;\nimport com.firebase.geofire.GeoQuery;\nimport com.firebase.geofire.GeoQueryEventListener;\nimport com.google.android.gms.common.api.GoogleApiClient;\nimport com.google.android.gms.common.api.PendingResult;\nimport com.google.android.gms.common.api.ResultCallback;\nimport com.google.android.gms.common.api.Status;\nimport com.google.android.gms.location.FusedLocationProviderClient;\nimport com.google.android.gms.location.LocationCallback;\nimport com.google.android.gms.location.LocationRequest;\nimport com.google.android.gms.location.LocationResult;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.location.LocationSettingsRequest;\nimport com.google.android.gms.location.LocationSettingsResult;\nimport com.google.android.gms.location.LocationSettingsStatusCodes;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.Marker;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.navigation.NavigationView;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\nimport com.hasib.carebear.MainActivity;\nimport com.hasib.carebear.R;\nimport com.hasib.carebear.doctor.authentication.SignInActivityForDoctor;\nimport com.hasib.carebear.doctor.authentication.SignUpActivityForDoctor;\nimport com.hasib.carebear.doctor.container.Chamber;\nimport com.hasib.carebear.patient.authentication.SignInActivityForPatient;\nimport com.hasib.carebear.support.CareBear;\nimport com.hasib.carebear.support.FeedBackActivity;\nimport com.hasib.carebear.support.LatLong;\nimport com.hasib.carebear.support.Tools;\nimport com.karumi.dexter.Dexter;\nimport com.karumi.dexter.PermissionToken;\nimport com.karumi.dexter.listener.PermissionDeniedResponse;\nimport com.karumi.dexter.listener.PermissionGrantedResponse;\nimport com.karumi.dexter.listener.PermissionRequest;\nimport com.karumi.dexter.listener.single.PermissionListener;\n\nimport java.io.IOException;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\npublic class PatientMapActivity extends AppCompatActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\n\n    private static final String TAG = \"PatientMapActivity\";\n    private static final int REQUEST_CHECK_SETTINGS = 8001;\n\n    private GoogleMap mMap;\n    private LocationRequest locationRequest;\n    private LocationCallback locationCallback;\n    private FusedLocationProviderClient fusedLocationProviderClient;\n    private Marker currentLocationMarker, marker;\n    private LatLng currentLocation;\n\n    private Map<Marker, String> queryMarker = new HashMap<>();\n\n    private DatabaseReference databaseReference;\n    private GeoFire geoFire;\n    private GeoQuery geoQuery;\n    private GeoQueryEventListener listener;\n\n    //Main parent drawer layout\n    private DrawerLayout drawerLayout;\n    private ActionBarDrawerToggle toggle;\n\n    //Navigation Menu\n    private NavigationView navigationView;\n    private View navHeader;\n\n    private SearchView searchView;\n    private Geocoder geocoder;\n\n    private FirebaseAuth mAuth;\n\n    private BottomSheetBehavior bottomSheetBehavior;\n\n    private TextView chamberNameShow, doctorNameShow, doctorDegreeShow, doctorMedicalShow, chamberAddressShow, chamberFeeShow, chamberOpenDaysShow;\n    private ImageView doctorImageShow;\n\n    private FloatingActionButton searchButton;\n\n    @Override\n\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_patient_map);\n        this.setTitle(\"Nearby Chambers\");\n\n        //Enable HamBurger Action Bar\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        getSupportActionBar().hide();\n\n        //Navigation panel control\n        navigationView = findViewById(R.id.navigationId);\n        drawerLayout = findViewById(R.id.drawerId);\n        toggle = new ActionBarDrawerToggle(PatientMapActivity.this, drawerLayout, R.string.nav_open, R.string.nav_close);\n\n        drawerLayout.addDrawerListener(toggle);\n        toggle.syncState();\n\n        //Navigation View on click listener\n        navigationView.setNavigationItemSelectedListener(this);\n\n\n        searchView = findViewById(R.id.locationSearchView);\n        geocoder = new Geocoder(this, Locale.getDefault());\n\n        //Firebase authentication\n        mAuth = FirebaseAuth.getInstance(CareBear.getPatientFirebaseApp());\n\n\n        initBottomSheet();\n\n//        searchButton.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View view) {\n//\n//            }\n//        });\n\n        Dexter.withContext(this)\n                .withPermission(Manifest.permission.ACCESS_FINE_LOCATION)\n                .withListener(new PermissionListener() {\n                    @Override\n                    public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {\n\n                        buildLocationRequest();\n                        buildLocationCallBack();\n                        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(PatientMapActivity.this);\n\n                        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                                .findFragmentById(R.id.google_Map);\n                        mapFragment.getMapAsync(PatientMapActivity.this);\n\n                    }\n\n                    @Override\n                    public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {\n                        startActivity(new Intent(PatientMapActivity.this, MainActivity.class));\n\n                    }\n\n                    @Override\n                    public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {\n                        permissionToken.continuePermissionRequest();\n                    }\n                }).check();\n\n\n        //calling method of getting device current location\n        final LocationManager manager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);\n\n        findViewById(R.id.chamberSearchButton).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n                Intent intent = new Intent(PatientMapActivity.this, DoctorSearch.class);\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n                startActivity(intent);\n                finish();\n            }\n        });\n\n        findViewById(R.id.deviceCurrentLocationButton).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n\n                if (!manager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\n                    buildAlertMessageNoGps();\n                } else {\n                    gettingCurrentLocationButton();\n                }\n            }\n        });\n\n        findViewById(R.id.patientMapHamBurgerIcon).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n                drawerLayout.openDrawer(GravityCompat.START);\n            }\n        });\n\n        onLocationSearch();\n    }\n\n    private void initBottomSheet() {\n        // get the bottom sheet view\n        LinearLayout llBottomSheet = findViewById(R.id.bottom_sheet);\n\n        // init the bottom sheet behavior\n        bottomSheetBehavior = BottomSheetBehavior.from(llBottomSheet);\n\n        // change the state of the bottom sheet\n//        bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n\n        llBottomSheet.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if(bottomSheetBehavior.getState() != BottomSheetBehavior.STATE_EXPANDED) {\n                    bottomSheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED);\n                }else {\n                    bottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);\n                }\n            }\n        });\n\n        // set callback for changes\n        bottomSheetBehavior.setBottomSheetCallback(new BottomSheetBehavior.BottomSheetCallback() {\n            @Override\n            public void onStateChanged(@NonNull View bottomSheet, int newState) {\n                // TODO: 01-May-20 have to add back button for bottom sheet \n            }\n\n            @Override\n            public void onSlide(@NonNull View bottomSheet, float slideOffset) {\n\n            }\n        });\n        chamberNameShow = findViewById(R.id.chamberNameShow);\n        doctorNameShow = findViewById(R.id.doctorNameShow);\n        doctorDegreeShow = findViewById(R.id.doctorDegreeShow);\n        doctorMedicalShow = findViewById(R.id.doctorMedicalShow);\n        chamberAddressShow = findViewById(R.id.chamberAddressShow);\n        chamberFeeShow = findViewById(R.id.chamberFeeShow);\n        chamberOpenDaysShow = findViewById(R.id.chamberOpenDaysShow);\n        doctorImageShow = findViewById(R.id.doctorImageShow);\n    }\n\n    private void gettingCurrentLocationButton() {\n        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(PatientMapActivity.this);\n\n        try {\n            final Task<Location> locationTask = fusedLocationProviderClient.getLastLocation();\n\n            locationTask.addOnSuccessListener(new OnSuccessListener<Location>() {\n                @Override\n                public void onSuccess(Location location) {\n                    if (locationTask.isSuccessful()) {\n\n                        //showing device current location on map\n                        if (location != null) {\n                            Log.d(TAG, \"onSuccess: found location!\");\n\n                            if (currentLocationMarker != null) {\n                                currentLocationMarker.remove();\n                            }\n\n                            currentLocation = new LatLng(location.getLatitude(),\n                                    location.getLongitude());\n\n                            settingGeoFire(currentLocation);\n\n                            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(location.getLatitude(), location.getLongitude()), 15f));\n                            currentLocationMarker = mMap.addMarker(new MarkerOptions()\n                                    .position(new LatLng(location.getLatitude(), location.getLongitude()))\n                                    .title(LatLong.geoCoding(PatientMapActivity.this, new LatLng(location.getLatitude(), location.getLongitude()))));\n                        } else {\n                            fusedLocationProviderClient.requestLocationUpdates(locationRequest, locationCallback, null);\n                        }\n                    }\n                }\n            });\n        } catch (SecurityException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void onLocationSearch() {\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n            @Override\n            public boolean onQueryTextSubmit(String query) {\n                bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n\n                String submittedQuery = searchView.getQuery().toString();\n                List<Address> addressList = null;\n\n                try {\n                    addressList = geocoder.getFromLocationName(submittedQuery, 1);\n\n                    Log.d(TAG, \"onQueryTextSubmit: found submitted location\");\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    Log.d(TAG, \"onQueryTextSubmit: \" + e.getMessage());\n                }\n                Address address = null;\n                try {\n                    address = addressList.get(0);\n\n                    settingGeoFire(new LatLng(address.getLatitude(), address.getLongitude()));\n\n                    if (currentLocationMarker != null) {\n                        currentLocationMarker.remove();\n                    }\n\n                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(address.getLatitude(), address.getLongitude()), 15f));\n                    currentLocationMarker = mMap.addMarker(new MarkerOptions()\n                            .position(new LatLng(address.getLatitude(), address.getLongitude()))\n                            .title(LatLong.geoCoding(PatientMapActivity.this, address.getLatitude(), address.getLongitude())));\n\n                } catch (Exception e) {\n                    Toast.makeText(PatientMapActivity.this, \"No Place Found!\\nTry to search with additional info\\nExample: Gulshan, Dhaka\", Toast.LENGTH_LONG).show();\n                    e.printStackTrace();\n                }\n\n                return false;\n            }\n\n            @Override\n            public boolean onQueryTextChange(String newText) {\n                bottomSheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\n                return false;\n            }\n        });\n    }\n\n    private void settingGeoFire(final LatLng currentLocation) {\n        databaseReference = FirebaseDatabase.getInstance().getReference(\"chambers_locations\");\n        databaseReference.keepSynced(true);\n        geoFire = new GeoFire(databaseReference);\n\n        geoQuery = geoFire.queryAtLocation(new GeoLocation(currentLocation.latitude, currentLocation.longitude), 0.5);\n\n        Iterator mark = queryMarker.keySet().iterator();\n\n        while (mark.hasNext()) {\n            Marker marker1 = (Marker) mark.next();\n            marker1.remove();\n            mark.remove();\n        }\n        queryMarker.clear();\n\n        listener = new GeoQueryEventListener() {\n            @Override\n            public void onKeyEntered(String key, GeoLocation location) {\n                //Log.d(TAG, \"onKeyEntered: \"+String.format(\"Key %s entered the search area at [%f,%f]\", key, location.latitude, location.longitude));\n\n                marker = mMap.addMarker(new MarkerOptions()\n                        .position(new LatLng(location.latitude, location.longitude))\n                        .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_ORANGE)));\n\n                queryMarker.put(marker, key);\n            }\n\n            @Override\n            public void onKeyExited(String key) {\n\n            }\n\n            @Override\n            public void onKeyMoved(String key, GeoLocation location) {\n\n            }\n\n            @Override\n            public void onGeoQueryReady() {\n                Log.d(TAG, \"onGeoQueryReady: \" + queryMarker.toString());\n                mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {\n                    @Override\n                    public boolean onMarkerClick(Marker marker) {\n                        Log.d(TAG, \"onMarkerClick: \" + queryMarker.get(marker));\n\n                        bottomSheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);\n\n                        FirebaseDatabase\n                                .getInstance()\n                                .getReference(\"doctors_chamber_info\")\n                                .child(queryMarker.get(marker))\n                                .addListenerForSingleValueEvent(new ValueEventListener() {\n                                    @Override\n                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                                        HashMap hashMap = (HashMap) dataSnapshot.getValue();\n\n                                        Log.d(TAG, \"onDataChange: \" + hashMap.toString());\n\n                                        HashMap latlng = (HashMap) hashMap.get(\"chamberLatLng\");\n\n                                        LatLong latLong = new LatLong((Double) latlng.get(\"latitude\"), (Double) latlng.get(\"longitude\"));\n                                        Chamber chamber = new Chamber((String) hashMap.get(\"chamberName\"), (String) hashMap.get(\"chamberFees\"),\n                                                (String) hashMap.get(\"chamberAddress\"), latLong,\n                                                (String) hashMap.get(\"chamberTime\"), (HashMap) hashMap.get(\"chamberOpenDays\"),\n                                                (String) hashMap.get(\"doctorUserProfileId\"), (String) hashMap.get(\"chamberDatabaseId\"),\n                                                (String) hashMap.get(\"chamberDatabaseIdKeyInDoctorProfile\"));\n\n                                        chamberNameShow.setText(chamber.getChamberName());\n                                        chamberAddressShow.setText(chamber.getChamberAddress());\n                                        chamberFeeShow.setText(chamber.getChamberFees() + \" Taka\");\n                                        StringBuilder stringBuilder = new StringBuilder();\n                                        for (Map.Entry<String, Boolean> data : chamber.getChamberOpenDays().entrySet()) {\n                                            if (data.getValue().equals(Boolean.TRUE)) {\n                                                stringBuilder.append(data.getKey() + \",  \" + chamber.getChamberTime() + \"\\n\");\n                                            }\n                                        }\n                                        chamberOpenDaysShow.setText(stringBuilder);\n\n                                    }\n\n                                    @Override\n                                    public void onCancelled(@NonNull DatabaseError databaseError) {\n\n                                    }\n                                });\n                        return false;\n                    }\n                });\n            }\n\n            @Override\n            public void onGeoQueryError(DatabaseError error) {\n\n            }\n        };\n\n        geoQuery.addGeoQueryEventListener(listener);\n    }\n\n    private void buildLocationCallBack() {\n        locationCallback = new LocationCallback() {\n            @Override\n            public void onLocationResult(LocationResult locationResult) {\n                if (mMap != null) {\n                    if (currentLocationMarker != null) {\n                        currentLocationMarker.remove();\n                    }\n\n                    currentLocation = new LatLng(locationResult.getLastLocation().getLatitude(),\n                            locationResult.getLastLocation().getLongitude());\n\n                    settingGeoFire(currentLocation);\n\n                    currentLocationMarker = mMap.addMarker(new MarkerOptions()\n                            .position(new LatLng(locationResult.getLastLocation().getLatitude(),\n                                    locationResult.getLastLocation().getLongitude()))\n                            .title(LatLong.geoCoding(PatientMapActivity.this, locationResult.getLastLocation().getLatitude(),\n                                    locationResult.getLastLocation().getLongitude())));\n\n                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(currentLocationMarker.getPosition(), 15.0f));\n                }\n            }\n        };\n    }\n\n    private void buildLocationRequest() {\n        locationRequest = new LocationRequest();\n        locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);\n        locationRequest.setInterval(5000);\n        locationRequest.setFastestInterval(3000);\n        locationRequest.setSmallestDisplacement(10f);\n\n    }\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = Tools.configActivityMaps(googleMap);\n\n        if (fusedLocationProviderClient != null) {\n            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                // TODO: Consider calling\n                //    ActivityCompat#requestPermissions\n                // here to request the missing permissions, and then overriding\n                //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n                //                                          int[] grantResults)\n                // to handle the case where the user grants the permission. See the documentation\n                // for ActivityCompat#requestPermissions for more details.\n                return;\n            }\n            fusedLocationProviderClient.requestLocationUpdates(locationRequest, locationCallback, Looper.myLooper());\n        }\n    }\n\n    @Override\n    protected void onStop() {\n        if(geoQuery != null && fusedLocationProviderClient !=null) {\n            geoQuery.removeGeoQueryEventListener(listener);\n            fusedLocationProviderClient.removeLocationUpdates(locationCallback);\n        }\n        super.onStop();\n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    protected void onStart() {\n        super.onStart();\n\n        if (mAuth.getCurrentUser() == null) {\n            finish();\n            startActivity(new Intent(PatientMapActivity.this, SignInActivityForPatient.class));\n        }\n\n        initNavigationHeader(mAuth.getCurrentUser());\n    }\n\n    private void initNavigationHeader(final FirebaseUser user) {\n//        MaterialTextView profileName = navHeader.findViewById(R.id.profileNameId);\n//        MaterialTextView profileEmail = navHeader.findViewById(R.id.profileEmailId);\n//        final ImageView profileImage = navHeader.findViewById(R.id.profileImageId);\n//\n//        Log.d(TAG, \"initNavigationHeader: \" + user.getPhotoUrl());\n//\n//        Glide.with(PatientMapActivity.this)\n//                .load(user.getPhotoUrl())\n//                .diskCacheStrategy(DiskCacheStrategy.DATA)\n//                .fitCenter()\n//                .circleCrop()\n//                .into(profileImage);\n//\n//        profileName.setText(user.getDisplayName());\n//        profileEmail.setText(user.getEmail());\n    }\n\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.edit_chamber_menu, menu);\n        return super.onCreateOptionsMenu(menu);\n    }\n\n    @Override\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n\n        //On navigation view item pressed\n        switch (item.getItemId()) {\n            case R.id.homeMenuId: {\n                Log.d(TAG, \"onNavigationItemSelected: Tapped on Home Button\");\n\n                //Intenting to this activity\n                startActivity(new Intent(PatientMapActivity.this, PatientMapActivity.class));\n            }\n            break;\n\n            case R.id.profileMenuId: {\n                Log.d(TAG, \"onNavigationItemSelected: Profile Button Pressed\");\n\n                //Intenting to doctor's profile activity\n//                startActivity(new Intent(PatientMapActivity.this, DoctorProfileActivity.class));\n            }\n            break;\n\n            case R.id.signOutMenuId: {\n                Log.d(TAG, \"onNavigationItemSelected: user signing out\");\n\n                //Signing out current user\n                mAuth.signOut();\n                finish();\n\n                //Intenting to sign in activity for doctor\n                startActivity(new Intent(PatientMapActivity.this, SignInActivityForPatient.class));\n            }\n            break;\n\n            case R.id.shareMenuId: {\n                Intent intent = new Intent(Intent.ACTION_SEND);\n                intent.setType(\"text/plain\");\n\n                String subject = \"Care Bear- In a way of Healthiness\";\n                String body = \"This is a medical type app. It helps you to find catagorized doctor\\n\" +\n                        \"easily. It's both for a doctor and a patient.\\n\" +\n                        \"Download Link.......\";\n\n                intent.putExtra(Intent.EXTRA_SUBJECT, subject);\n                intent.putExtra(Intent.EXTRA_TEXT, body);\n\n                startActivity(Intent.createChooser(intent, \"Share with\"));\n            }\n            break;\n\n            case R.id.contactMenuId: {\n                startActivity(new Intent(PatientMapActivity.this, FeedBackActivity.class));\n            }\n        }\n\n        return false;\n    }\n\n    private void buildAlertMessageNoGps() {\n        GoogleApiClient googleApiClient = new GoogleApiClient.Builder(PatientMapActivity.this)\n                .addApi(LocationServices.API).build();\n        googleApiClient.connect();\n\n        LocationRequest locationRequest = LocationRequest.create();\n        locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);\n        locationRequest.setInterval(10000);\n        locationRequest.setFastestInterval(10000 / 2);\n\n        LocationSettingsRequest.Builder builder = new LocationSettingsRequest.Builder().addLocationRequest(locationRequest);\n        builder.setAlwaysShow(true);\n\n        PendingResult<LocationSettingsResult> result = LocationServices.SettingsApi.checkLocationSettings(googleApiClient, builder.build());\n        result.setResultCallback(new ResultCallback<LocationSettingsResult>() {\n            @Override\n            public void onResult(LocationSettingsResult result) {\n                final Status status = result.getStatus();\n                switch (status.getStatusCode()) {\n                    case LocationSettingsStatusCodes.SUCCESS:\n                        Log.i(TAG, \"All location settings are satisfied.\");\n                        break;\n                    case LocationSettingsStatusCodes.RESOLUTION_REQUIRED:\n                        Log.i(TAG, \"Location settings are not satisfied. Show the user a dialog to upgrade location settings \");\n\n                        try {\n                            // Show the dialog by calling startResolutionForResult(), and check the result\n                            // in onActivityResult().\n                            status.startResolutionForResult(PatientMapActivity.this, REQUEST_CHECK_SETTINGS);\n                        } catch (IntentSender.SendIntentException e) {\n                            Log.i(TAG, \"PendingIntent unable to execute request.\");\n                        }\n                        break;\n                    case LocationSettingsStatusCodes.SETTINGS_CHANGE_UNAVAILABLE:\n                        Log.i(TAG, \"Location settings are inadequate, and cannot be fixed here. Dialog not created.\");\n                        break;\n                }\n            }\n        });\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hasib/carebear/patient/PatientMapActivity.java	(revision 39a663ee9ac12c505b2415975b975386af86bca3)
+++ app/src/main/java/com/hasib/carebear/patient/PatientMapActivity.java	(date 1623847623873)
@@ -437,6 +437,7 @@
                                         chamberAddressShow.setText(chamber.getChamberAddress());
                                         chamberFeeShow.setText(chamber.getChamberFees() + " Taka");
                                         StringBuilder stringBuilder = new StringBuilder();
+
                                         for (Map.Entry<String, Boolean> data : chamber.getChamberOpenDays().entrySet()) {
                                             if (data.getValue().equals(Boolean.TRUE)) {
                                                 stringBuilder.append(data.getKey() + ",  " + chamber.getChamberTime() + "\n");
